import telebot
import random
import sqlite3
from telebot import types, callback_data
import time
import requests
import threading
bot = telebot.TeleBot('7244608311:AAHrlYJnzHwBpTTZ1Js7QG6gBTwDxtmx3Yw')
db_path = 'casino.db'

back = 'üîô Back'
casino_players = {}
def send_menu(message):
    text = '*WELCOME*'
    markup = types.InlineKeyboardMarkup()
    my_profile= types.InlineKeyboardButton('My Profile', callback_data='my_profile')
    markup.add(my_profile)
    bot.send_message(message.chat.id, text, reply_markup=markup,parse_mode="Markdown")
@bot.message_handler(commands=['start'])
def send_menu1(message):
    send_menu(message)

def get_balance(chat_id):
    connection = sqlite3.connect(db_path)
    cursor = connection.cursor()
    cursor.execute('SELECT balance FROM casino_users WHERE chat_id = ?', (chat_id,))
    result = cursor.fetchone()
    connection.close()
    if result:
        return result[0]
    return None

def get_db_connection(message):
    connection = sqlite3.connect(db_path)
    return connection
def get_first_name(chat_id):
    connection = sqlite3.connect(db_path)
    cursor = connection.cursor()
    cursor.execute('SELECT first_name FROM casino_users WHERE chat_id = ?', (chat_id,))
    result = cursor.fetchone()
    connection.close()
    if result:
        return result[0]
    return "User"  # –ï—Å–ª–∏ –∏–º–µ–Ω–∏ –Ω–µ—Ç
def update_first_name(chat_id, new_first_name):
    connection = sqlite3.connect(db_path)
    cursor = connection.cursor()
    cursor.execute('UPDATE casino_users SET first_name = ? WHERE chat_id = ?', (new_first_name, chat_id))
    connection.commit()
    connection.close()
def my_profile(chat_id):
    """–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã
    first_name = escape_markdown(get_first_name(chat_id))  # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∏–º—è
    user_balance = escape_markdown(str(get_balance(chat_id)))  # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –±–∞–ª–∞–Ω—Å (–ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å—Ç—Ä–æ–∫—É)

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
    caption = f"""
üñº **–ò–º—è:** {first_name}
üí≥ **–ë–∞–ª–∞–Ω—Å:** {user_balance} ‚ÇΩ
"""

    # –ö–Ω–æ–ø–∫–∏
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(
        types.InlineKeyboardButton("‚úèÔ∏è Edit Profile Name", callback_data="edit_profile_name"),
        types.InlineKeyboardButton("üîô Back", callback_data="back_to_menu")
    )

    # –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_photo = get_user_photo(chat_id)

    if user_photo:  # –ï—Å–ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –µ—Å—Ç—å
        bot.send_photo(chat_id, user_photo, caption=caption, reply_markup=keyboard, parse_mode="Markdown")
    else:
        bot.send_message(chat_id, caption, reply_markup=keyboard, parse_mode="Markdown")


def get_user_photo(chat_id):
    user_photos = bot.get_user_profile_photos(chat_id)
    if user_photos.photos:  # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω—ã —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è
        file_id = user_photos.photos[0][-1].file_id  # –ë–µ—Ä–µ–º —Ñ–æ—Ç–æ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º
        return file_id
    return None  # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏



# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã my_profile
@bot.callback_query_handler(func=lambda call: call.data == 'my_profile')
def my_profile_callback(call):
    bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)  # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    my_profile(call.message.chat.id)  # –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è


# –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏
@bot.callback_query_handler(func=lambda call: call.data == "edit_profile_name")
def edit_profile_name_callback(call):
    bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)  # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.send_message(call.message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è:")
    bot.register_next_step_handler(call.message, process_new_name)


def name_exists(new_name):
    connection = sqlite3.connect(db_path)
    cursor = connection.cursor()
    cursor.execute('SELECT EXISTS(SELECT 1 FROM casino_users WHERE first_name = ?)', (new_name,))
    result = cursor.fetchone()
    connection.close()
    return result[0] == 1  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤–µ—Ä–Ω–µ—Ç—Å—è 1, –∏–Ω–∞—á–µ 0
def escape_markdown(text):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏–º–≤–æ–ª–æ–≤ Markdown."""
    escape_characters = ['_', '*', '[', ']', '(', ')', '~', '`', '>', '#', '+', '-', '=', '|', '{', '}', '.', '!']
    for char in escape_characters:
        text = text.replace(char, f'\\{char}')
    return text

def process_new_name(message):
    new_name = message.text.strip()  # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤–æ–µ –∏–º—è –∏ —É–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
    chat_id = message.chat.id

    if name_exists(new_name):
        bot.send_message(chat_id, f"–ò–º—è **{escape_markdown(new_name)}** —É–∂–µ –∑–∞–Ω—è—Ç–æ. –í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –∏–º—è:",
                         parse_mode="Markdown")
        bot.register_next_step_handler(message, process_new_name)
    else:
        update_first_name(chat_id, new_name)
        bot.send_message(chat_id, f"–í–∞—à–µ –∏–º—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ **{escape_markdown(new_name)}**!",
                         parse_mode="Markdown")
        my_profile(chat_id)



@bot.callback_query_handler(func=lambda call: call.data == "back_to_menu")
def back_to_menu_callback(call):
    bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
    send_menu(call.message)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é



def send_menu(message):
    text = '*WELCOME*'
    markup = types.InlineKeyboardMarkup()
    my_profile_button = types.InlineKeyboardButton('Profile', callback_data='my_profile')
    markup.add(my_profile_button)
    bot.send_message(message.chat.id, text, reply_markup=markup, parse_mode="Markdown")


@bot.message_handler(commands=['start'])
def send_menu_start(message):
    send_menu(message)


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)


